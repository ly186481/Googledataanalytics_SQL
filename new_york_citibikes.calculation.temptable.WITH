--we want to find out what routes are most popular with different user types.

SELECT
  usertype,
  CONCAT(start_station_name," to ",end_station_name) AS route,
  COUNT(*) AS num_trips,
  ROUND(AVG(cast(tripduration as int64)/60),2) AS duration
FROM
  `bigquery-public-data.new_york.citibike_trips`
GROUP BY
  start_station_name, end_station_name, usertype
ORDER BY
  num_trips DESC
LIMIT 10

--Calculation with other statements

SELECT
  EXTRACT(YEAR FROM STARTTIME) AS year,
  COUNT(*) AS number_of_rides
FROM
  bigquery-public-data.new_york.citibike_trips
GROUP BY
  year
ORDER BY
  year

--The WITH clause is a type of temporary table that you can query from multiple times
WITH trips_over_1_hr AS (
    SELECT *
    FROM
      bigquery-public-data.new_york.citibike_trips
    WHERE
      tripduration >= 60

)

## Count how many trips are 60+ minutes long

SELECT
  COUNT(*) AS cnt
FROM
  trips_over_1_hr
##show total number of biketrips from the dataset that lasted 60 minutes or longer

--A bikeshare company has reached a recent milestone, and their marketing team wants to write a blog post that “congratulates” their most-used bike on being so popular. They want to include the name of the station that the bike is most likely to be found. They task you with figuring out the station from which the bike begins a trip most frequently. In order to do this, you will need to create a temp table to find the ID number of the bike that has taken the longest total trips (in minutes). You will take a sum of the minutes of each trip for each bike, then sort by descending order to find the bike that has spent the most minutes being used.

WITH longest_used_bike AS(
  SELECT
    bikeid,
    SUM(duration_minutes) AS trip_duration
  FROM
    bigquery-public-data.austin_bikeshare.bikeshare_trips
  GROUP BY
    bikeid
  ORDER BY
    trip_duration DESC
  LIMIT 1
)

## find station at which longest bikeshare ride started
SELECT
  trips.start_station_id,
  COUNT(*) AS trip_ct
FROM
  longest_used_bike AS longest
INNER JOIN
  bigquery-public-data.austin_bikeshare.bikeshare_trips AS trips
ON longest.bikeid = trips.bikeid
GROUP BY
  trips.start_station_id
ORDER BY
  trip_ct DESC
LIMIT 1
